From e6fb33b44f5736e98b8c34c5a3296a342394c3fa Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Stefan=20L=C3=B6ffler?= <st.loeffler@gmail.com>
Date: Sun, 23 Apr 2023 08:47:13 +0200
Subject: [PATCH] Fix compilation with Qt 6.5

diff --git a/src/scripting/Script.cpp b/src/scripting/Script.cpp
index 3437f125..01a4cbe1 100644
--- a/src/scripting/Script.cpp
+++ b/src/scripting/Script.cpp
@@ -348,11 +348,21 @@ Script::MethodResult Script::doCallMethod(QObject * obj, const QString& name,
 		typeName = QString::fromUtf8(mm.typeName());
 		if (typeName.isEmpty()) {
 			// no return type
-			retValArg = QGenericReturnArgument();
 		}
 		else if (typeName == QString::fromLatin1("QVariant")) {
 			// QMetaType can't construct QVariant objects
+#if QT_VERSION < QT_VERSION_CHECK(6, 5, 0)
 			retValArg = Q_RETURN_ARG(QVariant, result);
+#else
+			// Starting Qt 6.5, Q_RETURN_ARG returns a QMetaMethodReturnArgument
+			// which is incompatible with the QGenericReturnArgument used here
+			// FIXME: the QGeneric*Argument approach is deprecated and may be
+			// removed in the future (Qt 7?). Porting to the
+			// QMetaMethod*Argument route could be beneficial, but doesn't seem
+			// to work with variable length lists of arguments (as it uses
+			// variadic templates which need to be known at compile-time)
+			retValArg = QGenericReturnArgument("QVariant", &result);
+#endif
 		}
 		else {
 			// Note: These two lines are a hack!
