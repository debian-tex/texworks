From 5476b35b6211b34bdf49ecd9b5c8abb2edca9b9f Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Stefan=20L=C3=B6ffler?= <st.loeffler@gmail.com>
Date: Wed, 22 Feb 2023 07:54:42 +0100
Subject: [PATCH] Fix Qt 6.4 warnings

---
 unit-tests/UI_test.cpp    | 19 ++++++++++++++-----
 unit-tests/Utils_test.cpp |  9 ++++++---
 2 files changed, 20 insertions(+), 8 deletions(-)

--- texworks.orig/unit-tests/UI_test.cpp
+++ texworks/unit-tests/UI_test.cpp
@@ -173,7 +173,9 @@
 	// i.e., holding down a mouse button while moving. Hence we have to send our
 	// own QMouseEvent.
 	{
-		QMouseEvent me(QEvent::MouseMove, w.rulerRect().bottomRight(), Qt::LeftButton, Qt::LeftButton, {});
+		const QPoint local = w.rulerRect().bottomRight();
+		const QPoint global = w.mapToGlobal(local);
+		QMouseEvent me(QEvent::MouseMove, local, global, Qt::LeftButton, Qt::LeftButton, {});
 		QCoreApplication::instance()->notify(&w, &me);
 	}
 	QVERIFY(w.isDragging());
@@ -203,7 +205,8 @@
 	QCOMPARE(spy.count(), 0);
 
 	{
-		QMouseEvent me(QEvent::MouseMove, upPos, Qt::LeftButton, Qt::LeftButton, {});
+		const QPointF global = w.mapToGlobal(upPos);
+		QMouseEvent me(QEvent::MouseMove, upPos, global, Qt::LeftButton, Qt::LeftButton, {});
 		QCoreApplication::instance()->notify(&w, &me);
 	}
 	QVERIFY(w.isDragging());
@@ -265,7 +268,9 @@
 	// Click inside the rulerRect
 	QVERIFY(w.contextMenu().isVisible() == false);
 	{
-		QContextMenuEvent cme(QContextMenuEvent::Mouse, w.rulerRect().center());
+		const QPoint local = w.rulerRect().center();
+		const QPoint global = w.mapToGlobal(local);
+		QContextMenuEvent cme(QContextMenuEvent::Mouse, local, global);
 		QCoreApplication::instance()->notify(&w, &cme);
 	}
 	QVERIFY(w.contextMenu().isVisible());
@@ -274,7 +279,9 @@
 	// Click outside the rulerRect
 	QVERIFY(w.contextMenu().isVisible() == false);
 	{
-		QContextMenuEvent cme(QContextMenuEvent::Mouse, w.rulerRect().topLeft() - QPoint(1, 1));
+		const QPoint local = w.rulerRect().topLeft() - QPoint(1, 1);
+		const QPoint global = w.mapToGlobal(local);
+		QContextMenuEvent cme(QContextMenuEvent::Mouse, local, global);
 		QCoreApplication::instance()->notify(&w, &cme);
 	}
 	QVERIFY(w.contextMenu().isVisible() == false);
@@ -282,7 +289,9 @@
 	// Keypress ("outside the rulerRect")
 	QVERIFY(w.contextMenu().isVisible() == false);
 	{
-		QContextMenuEvent cme(QContextMenuEvent::Keyboard, w.rulerRect().center() - QPoint(1, 1));
+		const QPoint local = w.rulerRect().center() - QPoint(1, 1);
+		const QPoint global = w.mapToGlobal(local);
+		QContextMenuEvent cme(QContextMenuEvent::Keyboard, local, global);
 		QCoreApplication::instance()->notify(&w, &cme);
 	}
 	QVERIFY(w.contextMenu().isVisible());
--- texworks.orig/unit-tests/Utils_test.cpp
+++ texworks/unit-tests/Utils_test.cpp
@@ -398,7 +398,8 @@
 		m.addShortcut(QKeySequence(Qt::Key_F), SLOT(update()));
 		QCOMPARE(m.shortcuts().count(), 0);
 
-		QMouseEvent e(QMouseEvent::Move, {0, 0}, Qt::NoButton, Qt::NoButton, {});
+		const QPoint mousePos{0, 0};
+		QMouseEvent e(QMouseEvent::Move, mousePos, mousePos, Qt::NoButton, Qt::NoButton, {});
 		m.mouseMoveEvent(&e);
 	}
 	{
@@ -441,8 +442,10 @@
 
 		if (!w.menuBar()->isNativeMenuBar()) {
 			constexpr int threshold = 10;
-			QMouseEvent mouseOver(QMouseEvent::Move, {0, threshold}, Qt::NoButton, Qt::NoButton, {});
-			QMouseEvent mouseOut(QMouseEvent::Move, {0, qMax(threshold, w.menuBar()->height()) + 1.}, Qt::NoButton, Qt::NoButton, {});
+			const QPoint overPos{0, threshold};
+			const QPoint outPos{0, qMax(threshold, w.menuBar()->height()) + 1};
+			QMouseEvent mouseOver(QMouseEvent::Move, overPos, overPos, Qt::NoButton, Qt::NoButton, {});
+			QMouseEvent mouseOut(QMouseEvent::Move, outPos, outPos, Qt::NoButton, Qt::NoButton, {});
 
 			// Hover over and move away quickly (should not trigger the menubar)
 			m.mouseMoveEvent(&mouseOver);
